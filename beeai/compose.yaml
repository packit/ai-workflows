# Environment variables shared by all agents
x-beeai-env: &beeai-env
  MCP_JIRA_URL: http://mcp-atlassian:9000/sse
  MCP_GATEWAY_URL: http://mcp-gateway:8000/sse
  REDIS_URL: redis://valkey:6379/0
  COLLECTOR_ENDPOINT: http://phoenix:6006/v1/traces
  GIT_REPO_BASEPATH: /git-repos
  MAX_RETRIES: 3
  DRY_RUN: ${DRY_RUN:-false}

# Base template for BeeAI agents
x-beeai-agent: &beeai-agent
  depends_on:
    - mcp-atlassian
    - mcp-gateway
    - valkey
    - phoenix
  environment:
    <<: *beeai-env
  env_file:
    - .secrets/beeai-agent.env
  volumes:
    - ./agents:/home/beeai/agents:ro,z
    - ./common:/home/beeai/common:ro,z
    - git-repos:/git-repos:rw,U
    - .secrets/rhel-config.json:/home/beeai/rhel-config.json:ro,z,U
  restart: unless-stopped

# C9S agent template
x-beeai-agent-c9s: &beeai-agent-c9s
  <<: *beeai-agent
  image: beeai-agent:c9s
  build:
    context: .
    dockerfile: Containerfile.c9s
  environment:
    <<: *beeai-env
    CONTAINER_VERSION: c9s

# C10S agent template
x-beeai-agent-c10s: &beeai-agent-c10s
  <<: *beeai-agent
  image: beeai-agent:c10s
  build:
    context: .
    dockerfile: Containerfile.c10s
  environment:
    <<: *beeai-env
    CONTAINER_VERSION: c10s

services:
  mcp-atlassian:
    image: ghcr.io/sooperset/mcp-atlassian:latest
    env_file:
      - .secrets/mcp-atlassian.env
    command: ["--transport", "sse", "--port", "9000", "-vv"]
    restart: unless-stopped

  mcp-gateway:
    image: mcp-gateway
    build:
      context: .
      dockerfile: Containerfile.mcp
    environment:
      - SSE_PORT=8000
      - KEYTAB_FILE=/home/mcp/keytab
      # default cache location is a keyring
      - KRB5CCNAME=FILE:/tmp/krb5cc
      - DRY_RUN=${DRY_RUN:-false}
    env_file:
      - .secrets/mcp-gateway.env
    volumes:
      - ./mcp_server:/home/mcp/mcp_server:ro,z
      - ./common:/home/mcp/common:ro,z
      - .secrets/keytab:/home/mcp/keytab:ro,z,U
      - git-repos:/git-repos
      - .secrets/rhel-config.json:/home/mcp/rhel-config.json:ro,z,U
    command: ["python", "mcp_server/gateway.py"]
    restart: unless-stopped

  valkey:
    image: docker.io/valkey/valkey:8
    volumes:
      - valkey-data:/data
    restart: unless-stopped

  phoenix:
    image: docker.io/arizephoenix/phoenix:version-11.6.2
    ports:
      - "0.0.0.0:6006:6006"
    environment:
      - PHOENIX_WORKING_DIR=/mnt/data
    volumes:
      - phoenix-data:/mnt/data
    restart: unless-stopped

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:0.9.0
    environment:
      - REDIS_HOSTS=local:valkey:6379
    ports:
      - "8081:8081"
    depends_on:
      - valkey
    restart: unless-stopped

  triage-agent:
    <<: *beeai-agent-c10s
    environment:
      <<: *beeai-env
    command: ["python", "agents/triage_agent.py"]

  backport-agent-c9s:
    <<: *beeai-agent-c9s
    command: ["python", "agents/backport_agent.py"]

  backport-agent-c10s:
    <<: *beeai-agent-c10s
    command: ["python", "agents/backport_agent.py"]

  rebase-agent-c9s:
    <<: *beeai-agent-c9s
    command: ["python", "agents/rebase_agent.py"]

  rebase-agent-c10s:
    <<: *beeai-agent-c10s
    command: ["python", "agents/rebase_agent.py"]

  jira-issue-fetcher:
    # No hard dependencies - will connect to existing services or fail gracefully
    # otherwise it will kill agents already running
    image: jira-issue-fetcher
    build:
      context: .
      dockerfile: Containerfile.jira-issue-fetcher
    environment:
      - REDIS_URL=redis://valkey:6379/0
    env_file:
      - .secrets/jira-issue-fetcher.env
    restart: "no"
    profiles: ["manual"]  # Don't start by default, run manually for testing

volumes:
  valkey-data:
  phoenix-data:
  git-repos:
