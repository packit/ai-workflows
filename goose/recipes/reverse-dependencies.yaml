version: 0.1.0
title: "Find reverse dependencies of an RPM package"
description: "Find the reverse dependencies of the {{ package }} package for the architecture {{ arch }}. That is all packages that directly or transitively depend on the {{ package }} package on the architecture {{ arch }}."

instructions: |
  * Before starting, create a temporary directory via mktemp that will be your working directory.
  * For clarity, always use full, absolute paths for file I/O.
  * Run all steps in a single shell command, so they share an environment

parameters:
- key: arch
  input_type: string
  requirement: required
  description: The architecture of the platform to look for dependencies in
- key: package
  input_type: string
  requirement: required
  description: The package for which to find reverse dependencies.

prompt: |
  You are an AI agent to list direct and transitive reverse dependencies of a given RPM package. As input, receive the package name and target architecture. Output two files and print their contents: `{{ package }}-reverse-deps.txt` and `{{ package }}-all-reverse-deps.json`.

  Steps:

  1. Save the location of the `scripts/` directory for later use in an environment variable, and then create and enter a unique working directory:
     ```bash
     scriptsdir=$(pwd)/scripts
     workingdir=$(realpath $(mktemp -d "{{ package }}.XXXXX"))
     cd "$workingdir"
     ```

  2. Define the repository URL:
     ```bash
     baseurl=http://download.devel.redhat.com/rhel-10/nightly/RHEL-10/latest-RHEL-10/
     ```

  3. Query direct-only reverse dependencies as a flat list by running the helper script:
     ```bash
     $scriptsdir/find-package-dependents.py --base-url $baseurl --format plain '{{ package }}' \
     --output-file "$workingdir/{{ package }}-reverse-deps.txt"
     ```

  4. Query all direct and indirect reverse dependencies as JSON by running the helper script:
     ```bash
     $scriptsdir/find-package-dependents.py --base-url $baseurl --all --format=json '{{ package }}' \
     --output-file "$workingdir/{{ package }}-all-reverse-deps.json"
     ```

  5. Read the output files "$workingdir/{{ package }}-reverse-deps.txt" and "$workingdir/{{ package }}-all-reverse-deps.json" and read them back to me.
