# This Containerfile contains several stages:
#
#     runtime-platform: Fedora base image with the required dependencies
#     added on top to run the SSE bridge.
#
#     production: Production build with minimal dependencies
#
#     debug: Debug build with additional tools

ARG BASE_IMAGE=registry.fedoraproject.org/fedora:42

#
# runtime-platform: Fedora base image with the required dependencies
#
FROM ${BASE_IMAGE} AS runtime-platform

# Install required system packages
RUN dnf -y update \
    && dnf -y install --setopt=install_weak_deps=False python3 uv wget \
    && dnf clean all \
    && rm -rf /var/cache/dnf

# Create non-root user
RUN useradd -m -U bridge \
    && mkdir -p /app \
    && chown -R bridge:bridge /app

USER bridge
WORKDIR /app

#
# production: Production build with minimal dependencies
#
FROM runtime-platform AS production

# Copy only dependency metadata first to maximize layer cache
COPY --chown=bridge:bridge pyproject.toml README.md LICENSE uv.lock ./

# Resolve and install project dependencies into the system environment
USER root
RUN uv export --frozen --no-dev -o /tmp/requirements.txt \
    && uv pip install --system --no-cache -r /tmp/requirements.txt \
    && rm -f /tmp/requirements.txt
USER bridge

# Copy the rest of the project
COPY --chown=bridge:bridge testing_farm_sse_bridge ./testing_farm_sse_bridge

# Install the application itself without re-resolving dependencies
USER root
RUN uv pip install --system --no-cache --no-deps .
USER bridge

EXPOSE 10000

ENV HOST=0.0.0.0 \
    PORT=10000

CMD ["testing-farm-sse-bridge"]

#
# debug: Debug build with additional tools
#
FROM runtime-platform AS debug

# Install debug tools
USER root
RUN dnf -y install \
    python3-pip \
    python3-ipython \
    python3-pytest \
    && dnf clean all \
    && rm -rf /var/cache/dnf
USER bridge

# Copy only dependency metadata first to maximize layer cache
COPY --chown=bridge:bridge pyproject.toml README.md LICENSE uv.lock ./

# Resolve and install project dependencies including dev extras
USER root
RUN uv export --frozen --dev -o /tmp/requirements.txt \
    && uv pip install --system --no-cache -r /tmp/requirements.txt \
    && rm -f /tmp/requirements.txt
USER bridge

# Copy the rest of the project
COPY --chown=bridge:bridge pyproject.toml README.md LICENSE ./
COPY --chown=bridge:bridge testing_farm_sse_bridge ./testing_farm_sse_bridge

# Install the application itself without re-resolving dependencies
USER root
RUN uv pip install --system --no-cache --no-deps .
USER bridge

CMD ["testing-farm-sse-bridge", "--host=0.0.0.0", "--port=10000", "--log-level=debug"]
