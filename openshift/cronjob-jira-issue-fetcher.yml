apiVersion: batch/v1
kind: CronJob
metadata:
  name: jira-issue-fetcher
  labels:
    app: jira-issue-fetcher
    component: scheduler
spec:
  schedule: "*/30 * * * *"  # Every 30 minutes
  concurrencyPolicy: Forbid  # Prevent overlapping runs
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  suspend: false
  jobTemplate:
    metadata:
      labels:
        app: jira-issue-fetcher
        component: job
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 1800  # 30 minutes max runtime
      template:
        metadata:
          labels:
            app: jira-issue-fetcher
            component: pod
        spec:
          restartPolicy: Never
          containers:
          - name: jira-issue-fetcher-env
            image: 'jira-issue-fetcher:prod'
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: endpoints-env
            - configMapRef:
                name: jira-env
            - secretRef:
                name: jira-env
            - configMapRef:
                name: jira-issue-fetcher-env
            resources:
              limits:
                cpu: "200m"
            securityContext:
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop:
                - ALL
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          dnsPolicy: ClusterFirst
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
